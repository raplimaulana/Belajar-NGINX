### Worker Process ###
Nginx default worker process are 1.
Worker Processes can be defined via directive worker_processes.
This directive is responsible for letting our virtual server know how many workers to spawn once it has become bound to the proper IP and port(s).
It is common practice to run 1 worker process per core CPU.
Anything above 1 Process per CPU won’t hurt your system, but it will leave idle processes usually just lying about.
Worker process directive belongs to Global Context

##Worker Connection 
This directive tells our worker processes how many people can simultaneously be served by Nginx.
This is the child of Events Context.
The default value is 768; however, considering that every browser usually opens up at least 2 connections/server, this number can half.
User can check our core’s limitations by issuing a ulimit command:

ulimit -n

worker_connections 1000     #This means, NGINX can server 1000 clients/second.




### Configuration Nginx ###
#File Configuration 
nano /etc/nginx/nginx.conf 

user www-data;
#worker_processes auto;
worker_processes 4;
events {
    worker_connections 1024;
}

http {
    include mime.types;
    server {
        listen 8081;
        server_name 104.131.80.130;

        root /bloggingtemplate/;

        index index.php index.html;

        location / {
            try_files $uri $uri/ =404;
        }
        location ~\.php{
            include fastcgi.conf;                           #location file /etc/nginx/fastcgi.conf
            fastcgi_pass unix:/run/php/php7.2-fpm.sock;
        }
    }
}

#check process 
ps -aux --forest | grep index

#browser
curl 104.131.80.130:8081/index.php
index.php